#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/assets/css' do
  # don’t filter or layout
end

compile '/assets/font/*' do
  # don’t filter or layout
end

compile '/assets/js' do
  # don’t filter or layout
end

compile '/assets/coffee/*/' do
  filter :coffee
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
  end
end

route '/assets/coffee/*/' do
  item.identifier.sub(%r{^/assets/coffee}, '/static/js').chop + '.js'
end

route '/assets/css/*/' do
  item.identifier.sub(%r{^/assets/css}, '/static/css').chop + '.css'
end

route '/assets/font/*' do
  item.identifier.sub(/-.+\/$/, '.') + item[:extension]
end

route '/assets/js/*/' do
  item.identifier.sub(%r{^/assets/js}, '/static/js').chop + '.js'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
